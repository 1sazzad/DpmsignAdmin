"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_middleware_1 = __importDefault(require("../middleware/auth.middleware"));
const rateLimiter_middleware_1 = require("../middleware/rateLimiter.middleware");
const imageUploader_middleware_1 = __importDefault(require("../middleware/imageUploader.middleware"));
const client_controller_1 = __importDefault(require("../controller/client.controller"));
const client_middleware_1 = __importDefault(require("../middleware/client.middleware"));
const clientController = new client_controller_1.default();
const clientMiddleware = new client_middleware_1.default();
const authMiddleware = new auth_middleware_1.default();
const clientImageUploader = new imageUploader_middleware_1.default();
const clientRouter = express_1.default.Router();
clientRouter.get("/", clientMiddleware.validateFilteringQueries, clientController.getAllClients);
clientRouter.post("/", rateLimiter_middleware_1.strictLimiter, clientMiddleware.validateClientCreation, clientController.createClient);
clientRouter.put("/", rateLimiter_middleware_1.strictLimiter, authMiddleware.authenticate(["admin"]), clientImageUploader.uploader("blog-images").single("banner-image"), clientImageUploader.compressImages, clientMiddleware.validateClientEdit, clientController.editClient);
clientRouter.delete("/:blogId", rateLimiter_middleware_1.strictLimiter, authMiddleware.authenticate(["admin"]), clientController.deleteClient);
exports.default = clientRouter;
