"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_middleware_1 = __importDefault(require("../middleware/auth.middleware"));
const inquery_middleware_1 = __importDefault(require("../middleware/inquery.middleware"));
const inquery_controller_1 = __importDefault(require("../controller/inquery.controller"));
const rateLimiter_middleware_1 = require("../middleware/rateLimiter.middleware");
const imageUploader_middleware_1 = __importDefault(require("../middleware/imageUploader.middleware"));
const authMiddleware = new auth_middleware_1.default();
const inqueryMiddleware = new inquery_middleware_1.default();
const inqueryController = new inquery_controller_1.default();
const inqueryImageUploader = new imageUploader_middleware_1.default();
const inqueryRouter = express_1.default.Router();
inqueryRouter.get("/", authMiddleware.authenticate(["admin", "agent", "designer"]), inqueryMiddleware.validateFilteringQueries, inqueryController.getAllInqueries);
inqueryRouter.post("/create-inquery", rateLimiter_middleware_1.strictLimiter, inqueryImageUploader.uploader("inqueries").array("designFiles", 5), inqueryImageUploader.compressImages, inqueryMiddleware.validateInqueryCreation, inqueryController.createInquery);
inqueryRouter.get("/close", rateLimiter_middleware_1.apiLimiter, authMiddleware.authenticate(["admin", "agent", "designer"]), inqueryMiddleware.validateInqueryStatusChange, inqueryController.closeInquery);
inqueryRouter.get("/open", rateLimiter_middleware_1.apiLimiter, authMiddleware.authenticate(["admin", "agent", "designer"]), inqueryMiddleware.validateInqueryStatusChange, inqueryController.openInquery);
inqueryRouter.delete("/", rateLimiter_middleware_1.apiLimiter, authMiddleware.authenticate(["admin"]), inqueryMiddleware.validateInqueryDelete, inqueryController.deleteInquery);
exports.default = inqueryRouter;
